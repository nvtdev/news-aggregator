{"version":3,"sources":["common.js","api/reddit.js","api/news.js","twitter.js","cookies.js","index.js"],"names":["shortenText","text","limit","shortened","indexOf","substring","shuffleArray","arr","i","length","j","Math","floor","random","search","searchTerm","searchLimit","sortByIndex","sortByOptions","fetch","then","res","json","data","children","map","catch","console","log","error","formatData","processedArray","forEach","imageUrl","post","preview","images","source","url","push","title","description","selftext","iconClass","date","Date","created","getHeadlines","articles","sources","urlToImage","publishedAt","id","name","news","getCookie","cname","decodedCookie","decodeURIComponent","document","cookie","ca","split","c","charAt","setCookie","value","days","expires","setTime","getTime","toUTCString","searchForm","getElementById","searchInput","sourcesList","redditResults","redditRetrieved","newsData","newsRetrieved","sourcesSelected","currentPosts","updateCookies","initialLoad","results","displayData","showSources","addListeners","addEventListener","showMessage","e","preventDefault","sortBy","parseInt","querySelector","output","key","innerHTML","filterSources","filteredNews","item","mergeData","mergedData","newsResults","moment","fromNow","latestSearches","searchCookies","addCookie","searchBadges","cookieList","includes","querySelectorAll","element","target","tag","dataset","sourceid","classList","contains","remove","add","sourceIndex","splice","message","className","div","createElement","searchContainer","appendChild","createTextNode","insertBefore","setTimeout","checkSavedPost","postId","cookieFavs","JSON","parse"],"mappings":"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","file":"reddit-search.map","sourcesContent":["export default {\n  shortenText: function(text, limit) {\n    const shortened = text.indexOf(\" \", limit);\n    if (shortened == -1) return text;\n    return text.substring(0, shortened);\n  },\n\n  shuffleArray: function(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n};\n","import common from \"../common\";\n\nexport default {\n  search: function(searchTerm, searchLimit, sortByIndex) {\n    const sortByOptions = [\"relevance\", \"top\", \"new\"];\n    // adding 'return' below allows us to make this function return a promise\n    return fetch(\n      `http://www.reddit.com/search.json?q=${searchTerm}&sort=${\n        sortByOptions[sortByIndex]\n      }&limit=${searchLimit}`\n    )\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(error => console.log(error));\n  },\n\n  formatData: function(data) {\n    let processedArray = [];\n    data.forEach(post => {\n      const imageUrl = post.preview\n        ? post.preview.images[0].source.url\n        : \"https://is3-ssl.mzstatic.com/image/thumb/Purple118/v4/e1/b7/35/e1b73581-862b-027a-e5d0-e2f95d2ee9d8/AppIcon-1x_U007emarketing-0-0-GLES2_U002c0-512MB-sRGB-0-0-0-85-220-0-0-0-6.png/246x0w.jpg\";\n\n      processedArray.push({\n        imageUrl: imageUrl,\n        title: post.title,\n        description: common.shortenText(post.selftext, 100),\n        iconClass: \"fab fa-reddit-alien\",\n        date: new Date(post.created),\n        url: post.url\n      });\n\n      console.log(post);\n      console.log(new Date(post.created));\n    });\n    return processedArray;\n  }\n};\n","export default {\n  getHeadlines: function() {\n    return fetch(\n      `https://newsapi.org/v2/top-headlines?language=en&pageSize=100&apiKey=3ec940fd3870472ab3728801d7cb1fde`\n    )\n      .then(res => res.json())\n      .then(data => data.articles)\n      .catch(error => console.log(error));\n  },\n\n  search: function(searchTerm, searchLimit, sortByIndex) {\n    const sortByOptions = [\"relevancy\", \"popularity\", \"publishedAt\"];\n    // adding 'return' below allows us to make this function return a promise\n    return fetch(\n      `https://newsapi.org/v2/everything?language=en&q=${searchTerm}&pageSize=100&sortBy=${\n        sortByOptions[sortByIndex]\n      }&apiKey=3ec940fd3870472ab3728801d7cb1fde`\n    )\n      .then(res => res.json())\n      .then(data => data.articles)\n      .catch(error => console.log(error));\n  },\n\n  formatData: function(data) {\n    let processedArray = [],\n      sources = [];\n    data.forEach(post => {\n      processedArray.push({\n        imageUrl: post.urlToImage\n          ? post.urlToImage\n          : \"https://yt3.ggpht.com/7xqC5TXeVwzt4_Yergj3yEBX1z0JyO152DgWyUoKycm66TeJbXhXe2oMK_wDuVyvByuzWhqFs9-T07b_f5k=s900-mo-c-c0xffffffff-rj-k-no\",\n        title: post.title,\n        description: post.description,\n        iconClass: \"fas fa-newspaper\",\n        date: new Date(post.publishedAt),\n        url: post.url,\n        source: post.source\n      });\n      if (post.source.id) sources[post.source.id] = post.source.name;\n    });\n    console.log(sources);\n    return {\n      news: processedArray,\n      sources: sources\n    };\n  }\n};\n","export default {\n  search: function(searchTerm) {\n    // adding 'return' below allows us to make this function return a promise\n    return (\n      fetch(`https://api.twitter.com/1.1/search/tweets.json?q=${searchTerm}`)\n        .then(res => res.json())\n        //   .then(data => data.data.children.map(data => data.data))\n        .catch(error => console.log(error))\n    );\n  }\n};\n","export default {\n  getCookie: function(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  },\n\n  setCookie: function(name, value, days) {\n    var expires = \"\";\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n  }\n};\n","import reddit from \"./api/reddit\";\nimport news from \"./api/news\";\nimport twitter from \"./twitter\";\nimport cookies from \"./cookies\";\nimport common from \"./common\";\n\nconst searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\nconst sourcesList = document.getElementById(\"sources-list\");\n\nlet redditResults = [],\n  redditRetrieved = false,\n  newsData = [],\n  newsRetrieved = false,\n  sourcesSelected = [];\n\nlet currentPosts = [];\n\nupdateCookies();\ninitialLoad();\n\nfunction initialLoad() {\n  news.getHeadlines().then(results => {\n    newsData = news.formatData(results);\n    displayData(newsData.news);\n    showSources(newsData.sources);\n    addListeners();\n  });\n}\n\nsearchForm.addEventListener(\"submit\", e => {\n  const searchTerm = searchInput.value;\n\n  if (searchTerm === \"\")\n    showMessage(\"Please add a search term\", \"alert-danger\");\n  else {\n    search(searchTerm);\n  }\n\n  e.preventDefault();\n});\n\nfunction search(searchTerm) {\n  (redditRetrieved = false), (newsRetrieved = false);\n\n  // const searchLimit = document.getElementById(\"limit\").value;\n  const sortBy = parseInt(\n    document.querySelector('input[name=\"sortby\"]:checked').value\n  );\n  // reddit.search(searchTerm, 100, sortBy).then(results => {\n  //   // displayData(reddit.formatData(results));\n  //   (redditRetrieved = true), (redditResults = reddit.formatData(results));\n  //   mergeData();\n  // });\n\n  news.search(searchTerm).then(results => {\n    // displayData(news.formatData(results));\n    // (newsRetrieved = true), (newsResults = news.formatData(results).news);\n    // mergeData();\n    newsData = news.formatData(results);\n    displayData(newsData.news);\n    showSources(newsData.sources);\n    addListeners();\n  });\n\n  updateCookies(searchTerm);\n}\n\nfunction showSources(sources) {\n  let output = \"\";\n  for (var key in sources) {\n    const source = sources[key];\n    output += `\n      <span class=\"badge badge-light source-item\" data-sourceid=\"${key}\">${source}</span>\n    `;\n  }\n  sourcesList.innerHTML = output;\n}\n\nfunction filterSources() {\n  if (sourcesSelected.length > 0) {\n    let filteredNews = [];\n    newsData.news.forEach(item => {\n      if (sourcesSelected.indexOf(item.source.id) > -1) filteredNews.push(item);\n    });\n    displayData(filteredNews);\n  } else displayData(newsData.news);\n}\n\nfunction mergeData() {\n  let mergedData = [];\n  if (redditRetrieved || newsRetrieved) {\n    mergedData = [...redditResults, ...newsResults];\n    displayData(mergedData);\n  }\n}\n\nfunction displayData(data) {\n  let output = '<div class=\"card-columns\">';\n  data.forEach(post => {\n    output += `\n        <div class=\"card search-card\">\n            <a href=\"${\n              post.url\n            }\" target=\"_blank\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Click to see post\">\n                <img class=\"card-img-top\" src=\"${\n                  post.imageUrl\n                }\" alt=\"Card image cap\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">${post.title}</h5>\n                  <p class=\"card-text\">${post.description}</p>\n                  <hr>\n                  <div class=\"post-stats\">\n                      <i data-toggle=\"tooltip\" data-placement=\"top\" title=\"A Reddit post\" class=\"${\n                        post.iconClass\n                      }\"></i>\n                      <span>${post.source.name}</span>\n                      <span style=\"float: right\">${moment(\n                        post.date\n                      ).fromNow()}</span>\n                  </div>\n                </div>\n            </a>\n        </div>\n        `;\n  });\n  output += \"</div\";\n\n  document.getElementById(\"results\").innerHTML = output;\n}\n\nfunction updateCookies(searchTerm) {\n  const latestSearches = document.getElementById(\"latest-searches\"),\n    searchCookies = cookies.getCookie(\"searches\");\n\n  if (searchTerm) addCookie(\"searches\", searchTerm);\n\n  let searchBadges = \"\";\n  cookies\n    .getCookie(\"searches\")\n    .split(\"separator\")\n    .forEach(cookie => {\n      searchBadges += `\n                  <span class=\"badge badge-pill badge-info search-badge\">${cookie}</span>\n              `;\n    });\n  latestSearches.innerHTML = searchBadges;\n}\n\nfunction addCookie(key, value) {\n  var cookieList = cookies.getCookie(key);\n\n  if (cookieList) {\n    if (!cookieList.includes(value))\n      cookies.setCookie(key, cookieList + \"separator\" + value);\n  } else cookies.setCookie(key, value);\n}\n\nfunction addListeners() {\n  document.querySelectorAll(\".search-badge\").forEach(element => {\n    element.addEventListener(\"click\", e => {\n      const searchTerm = e.target.innerHTML;\n      searchInput.value = searchTerm;\n      search(searchTerm);\n    });\n  });\n\n  document.querySelectorAll(\".source-item\").forEach(element => {\n    element.addEventListener(\"click\", e => {\n      const tag = e.target,\n        source = e.target.dataset.sourceid;\n      if (tag.classList.contains(\"badge-light\")) {\n        tag.classList.remove(\"badge-light\");\n        tag.classList.add(\"badge-success\");\n      } else {\n        tag.classList.add(\"badge-light\");\n        tag.classList.remove(\"badge-success\");\n      }\n\n      const sourceIndex = sourcesSelected.indexOf(source);\n\n      if (sourceIndex > -1) sourcesSelected.splice(sourceIndex, 1);\n      else sourcesSelected.push(source);\n\n      filterSources();\n    });\n  });\n}\n\nfunction showMessage(message, className) {\n  const div = document.createElement(\"div\");\n  const searchContainer = document.getElementById(\"search-container\");\n  const search = document.getElementById(\"search\");\n\n  div.className = `alert ${className}`;\n  div.appendChild(document.createTextNode(message));\n\n  searchContainer.insertBefore(div, search);\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\n}\n\nfunction checkSavedPost(postId) {\n  const cookieFavs = cookies.getCookie(\"savedPosts\").split(\"separator\");\n  if (cookieFavs == \"\") return false;\n  cookieFavs.forEach(cookie => {\n    if (JSON.parse(cookie).id == postId) return true;\n  });\n  return false;\n}\n"]}